(defun randomNoun ()
   (let ((r (random 3)))
    (cond ((= r 0) "animals")
          ((= r 1) "children")
          ((= r 2) "those in need")
          ))     
  )
(defun randomAdv ()
  (let ((r (random 3)))
    (cond ((= r 0) "efficiently")
          ((= r 1) "kindly")
          ((= r 2) "creatively")
          ))
  )
(defun randomVerbPhrase ()
  (let ((r (random 4)))
    (cond ((= r 0) "protect")
          ((= r 1) "build homes for")
          ((= r 2) "inspire")
          ((= r 3) "create equal opertunites for")
          ))
  )


(defun main ()
  (let ((r (random 4)))
    (cond ((= r 0) (format t (concatenate 'string' "Our company's purpose is to " (randomAdv) " " (randomVerbPhrase) " " (randomNoun) ".~%")))
          ((= r 1) (format t (concatenate 'string' "Our vision is to " (randomAdv) " " (randomVerbPhrase) " " (randomNoun)  ".~%")))
          ((= r 2) (format t (concatenate 'string' "Our company exists to " (randomAdv) " " (randomVerbPhrase) " " (randomNoun)  ".~%")))
          ((= r 3) (format t (concatenate 'string' "We can be relied upon to " (randomAdv) " " (randomVerbPhrase) " " (randomNoun)  ".~%")))
          (t (format t "Fail~%"))
)))
  

